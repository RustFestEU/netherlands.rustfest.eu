{"version":3,"sources":["webpack:///./src/components/molecules/Avatar.js","webpack:///./src/components/molecules/PersonIcons.js","webpack:///./src/components/organisems/Person.js","webpack:///./src/pages/about.js"],"names":["Avatar","styled","GatsbyImage","Link","a","PersonIcons","props","website","twitter","linkedin","github","gitlab","behance","medium","discord","rest","href","title","name","TEAM_GRID_2_BREAKPOINT","breakpoints","Modal","div","ModalContent","PersonWrapper","ModalAvatar","AvatarBase","PersonAvatar","PersonName","p","BlackIcons","GrayIcons","divSrOnly","Person","useState","hasJs","enableJs","visible","setVisible","useEffect","show","hide","modalRef","useRef","current","focus","Desc","modal","onClick","ref","tabIndex","onKeyUp","e","keyCode","stopPropagation","fluid","image","childImageSharp","alt","dangerouslySetInnerHTML","__html","children","data-modalcontrol","target","getAttribute","TEAM_GRID_3_BREAKPOINT","TeamGrid","About","teammembers","allTeammembers","nodes","map","member","key","id","frontmatter","about","Default","to"],"mappings":"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","file":"component---src-pages-about-js-d7023d3bd6389e549669.js","sourcesContent":["import GatsbyImage from 'gatsby-image';\nimport styled from 'styled-components';\n\nconst Avatar = styled(GatsbyImage)`\n  display: inline-block;\n  border-radius: 100%;\n`;\n\nexport default Avatar;\n","import React from 'react';\nimport styled from 'styled-components';\nimport {\n  Behance,\n  Discord,\n  GitHub,\n  Gitlab,\n  LinkedIn,\n  Medium,\n  Twitter,\n  Website,\n} from '../atoms/icons';\n\nconst Link = styled.a`\n  color: inherit;\n`;\n\nexport default function PersonIcons(props) {\n  const {\n    website,\n    twitter,\n    linkedin,\n    github,\n    gitlab,\n    behance,\n    medium,\n    discord,\n    ...rest\n  } = props;\n  return (\n    <div {...rest}>\n      {website ? (\n        <Link href={website} title={`View ${props.name}'s website`}>\n          <Website />\n        </Link>\n      ) : null}\n      {twitter ? (\n        <Link href={twitter} title={`View ${props.name}'s twitter`}>\n          <Twitter />\n        </Link>\n      ) : null}\n      {linkedin ? (\n        <Link href={linkedin} title={`View ${props.name}'s linkedin`}>\n          <LinkedIn />\n        </Link>\n      ) : null}\n      {github ? (\n        <Link href={github} title={`View ${props.name}'s github`}>\n          <GitHub />\n        </Link>\n      ) : null}\n      {gitlab ? (\n        <Link href={gitlab} title={`View ${props.name}'s gitlab`}>\n          <Gitlab />\n        </Link>\n      ) : null}\n      {behance ? (\n        <Link href={behance} title={`View ${props.name}'s behance`}>\n          <Behance />\n        </Link>\n      ) : null}\n      {medium ? (\n        <Link href={medium} title={`View ${props.name}'s medium`}>\n          <Medium />\n        </Link>\n      ) : null}\n      {discord ? (\n        <Link href={discord} title={`View ${props.name}'s discord`}>\n          <Discord />\n        </Link>\n      ) : null}\n    </div>\n  );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport AvatarBase from '../molecules/Avatar';\nimport PersonIcons from '../molecules/PersonIcons';\nimport { breakpoints } from '../tokens';\n\nconst { TEAM_GRID_2_BREAKPOINT } = breakpoints;\n\nconst Modal = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 10;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  background: rgba(0, 0, 0, 0.2);\n`;\n\nconst ModalContent = styled.div`\n  display: flex;\n  flex-direction: row;\n  max-width: 960px;\n  margin: 0 auto;\n  padding: 1rem;\n  background: white;\n\n  &:focus {\n    outline: 0;\n  }\n`;\n\nconst PersonWrapper = styled.div`\n  text-align: center;\n  cursor: pointer;\n\n  & ~ & {\n    margin-top: 2rem;\n  }\n\n  @media (min-width: ${TEAM_GRID_2_BREAKPOINT}) {\n    & ~ & {\n      margin-top: 0;\n    }\n  }\n`;\n\nconst ModalAvatar = styled(AvatarBase)`\n  flex: none;\n  width: 5rem;\n  height: 5rem;\n  margin-right: 1rem;\n  align-self: center;\n\n  @media (min-width: 30rem) {\n    width: 10rem;\n    height: 10rem;\n  }\n`;\n\nconst PersonAvatar = styled(AvatarBase)`\n  width: 100%;\n  max-width: 14rem;\n  height: auto;\n  max-height: 14rem;\n  border: 4px solid white;\n`;\n\nconst PersonName = styled.p`\n  font-size: 1.25rem;\n`;\n\nconst BlackIcons = styled(PersonIcons)`\n  color: #1a202c;\n`;\n\nconst GrayIcons = styled(PersonIcons)`\n  color: #4a5568;\n`;\n\nconst divSrOnly = styled.div`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border-width: 0;\n`;\n\nexport default function Person(props) {\n  const [hasJs, enableJs] = useState(false);\n  const [visible, setVisible] = useState(false);\n  useEffect(() => enableJs(true), [enableJs]);\n\n  const show = () => setVisible(true);\n  const hide = () => setVisible(false);\n\n  // The attribute check ensures that the modal doesn't open for links.\n  const showOnEnter = e =>\n    e.keyCode === 13 && e.target.getAttribute('data-modalcontrol') && show();\n  const hideOnEsc = e => e.keyCode === 27 && hide();\n\n  const modalRef = useRef();\n  useEffect(() => {\n    if (visible && modalRef.current) {\n      modalRef.current.focus();\n    }\n  });\n\n  // Show non-pop-over description only for screenreaders.\n  const Desc = hasJs ? divSrOnly : 'div';\n\n  const modal = visible ? (\n    <Modal onClick={hide}>\n      <ModalContent\n        ref={modalRef}\n        tabIndex={0}\n        onKeyUp={hideOnEsc}\n        onClick={e => e.stopPropagation()}\n      >\n        <ModalAvatar\n          fluid={props.image.childImageSharp.fluid}\n          alt={props.name}\n        />\n        <div>\n          <PersonName>{props.name}</PersonName>\n          <div dangerouslySetInnerHTML={{ __html: props.children }} />\n          {<BlackIcons {...props} />}\n        </div>\n      </ModalContent>\n    </Modal>\n  ) : null;\n\n  return (\n    <>\n      {modal}\n      <PersonWrapper\n        data-modalcontrol={true}\n        tabIndex={0}\n        onKeyUp={showOnEnter}\n        onClick={show}\n      >\n        <PersonAvatar\n          fluid={props.image.childImageSharp.fluid}\n          alt={props.name}\n        />\n        <PersonName>{props.name}</PersonName>\n        <Desc dangerouslySetInnerHTML={{ __html: props.children }} />\n        {<GrayIcons onClick={e => e.stopPropagation()} {...props} />}\n      </PersonWrapper>\n    </>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport Default from '../components/layouts/Default';\nimport SEO from '../components/Seo';\nimport Person from '../components/organisems/Person';\nimport { Link } from 'gatsby';\nimport { breakpoints } from '../components/tokens';\n\nconst { TEAM_GRID_2_BREAKPOINT, TEAM_GRID_3_BREAKPOINT } = breakpoints;\n\nconst TeamGrid = styled.div`\n  @media (min-width: ${TEAM_GRID_2_BREAKPOINT}) {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    column-gap: 1rem;\n    row-gap: 3rem;\n  }\n\n  @media (min-width: ${TEAM_GRID_3_BREAKPOINT}) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n`;\n\nexport default function About(props) {\n  const { allTeammembers } = useStaticQuery(\n    graphql`\n      query {\n        allTeammembers: allMarkdownRemark(\n          filter: { fields: { collection: { eq: \"teammembers\" } } }\n        ) {\n          nodes {\n            id\n            about: html\n            frontmatter {\n              name\n              image {\n                childImageSharp {\n                  fluid(maxWidth: 300) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n              website\n              twitter\n              linkedin\n              github\n              gitlab\n              behance\n              medium\n              discord\n            }\n          }\n        }\n      }\n    `\n  );\n\n  const teammembers = allTeammembers.nodes.map(member => (\n    <Person key={member.id} {...member.frontmatter}>\n      {member.about}\n    </Person>\n  ));\n\n  return (\n    <Default>\n      <SEO title={'About'} />\n      <h1>About</h1>\n      <p>\n        RustFest is Europe’s Rust-dedicated conference. The next edition of\n        RustFest will take place as a two-day event in the Netherlands.\n      </p>\n      <p>\n        We care about diversity and accessibility at this conference – please\n        take a look at our <Link to={'/code-of-conduct'}>Code of Conduct</Link>{' '}\n        and <Link to={'/accessibility'}>Accessibility Statement</Link>.\n      </p>\n      <h2>Team</h2>\n      <TeamGrid>{teammembers}</TeamGrid>\n    </Default>\n  );\n}\n"],"sourceRoot":""}