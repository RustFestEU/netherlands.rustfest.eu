{"version":3,"sources":["webpack:///./src/components/layouts/Splash.js","webpack:///./src/components/atoms/BgImage.js","webpack:///./src/components/molecules/RecentBlogPost.js","webpack:///./src/components/molecules/MailChimpSubscriptionForm.js","webpack:///./src/pages/index.js","webpack:///./node_modules/core-js/modules/es6.string.link.js"],"names":["OverlaidHeader","styled","Header","Splash","children","rest","BgImage","Image","props","height","fit","position","RecentBlogPost","post","feedRustFestBlog","date","pubDate","split","slice","join","snippet","contentSnippet","length","href","link","title","MailChimpSubscriptionForm","className","action","method","type","value","name","required","placeholder","TITLE_BREAKPOINT","breakpoints","Hero","div","City","span","Date","SplashTitle","h1","query","IndexPage","data","headerTitleAs","fluid","file","childImageSharp","Container","style","verticalAlign","createHTML","url","this"],"mappings":"soJAYA,IAAMA,EAAiBC,YAAOC,KAAV,6EAAGD,CAAH,4FA2BLE,EARA,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAaC,E,oIAAW,iBACxC,OACE,kBAAC,IAAD,eAAMH,OAAQF,GAAoBK,GAC/BD,I,6CCVQE,EAfCL,YAAOM,KAAV,6DAAGN,CAAH,iJAMD,SAAAO,GAAK,OAAIA,EAAMC,QAAU,UAInB,SAAAD,GAAK,OAAIA,EAAME,KAAO,WACjB,SAAAF,GAAK,OAAIA,EAAMG,UAAY,a,8CCXnC,SAASC,IAAiB,IAEbC,EAFa,OAE/BC,iBAYFC,EAAOF,EAAKG,QACfC,MAAM,KACNC,MAAM,EAAG,GACTC,KAAK,KAGJC,EAAUP,EAAKQ,eAChBJ,MAAM,KACNC,MAAM,EAAG,IACTC,KAAK,KAcR,OAZIC,EAAQE,OAAST,EAAKQ,eAAeC,SACvCF,GAAW,MACXA,EACE,oCACGA,EAAS,IACV,uBAAGG,KAAMV,EAAKW,KAAMC,MAAO,sBAA3B,eAQJ,iCACE,8BAAOV,GACP,4BACE,uBAAGQ,KAAMV,EAAKW,KAAMC,MAAO,sBACxBZ,EAAKY,QAGV,2BAAIL,ICpDK,SAASM,IACtB,OACE,0BACEC,UAAU,YACVC,OAAO,sDACPC,OAAO,QAEP,2BAAOC,KAAK,SAASC,MAAM,4BAA4BC,KAAK,MAC5D,2BAAOF,KAAK,SAASC,MAAM,aAAaC,KAAK,OAC7C,yBAAKL,UAAU,SACb,2BACEG,KAAK,QACLE,KAAK,QACLC,SAAS,GACTC,YAAY,2BAEd,4BAAQJ,KAAK,UAAb,a,gBClBR,sC,IAaQK,EAAqBC,IAArBD,iBAEFE,EAAOpC,IAAOqC,IAAV,kEAAGrC,CAAH,iMAoBJsC,EAAOtC,IAAOuC,KAAV,kEAAGvC,CAAH,qGAQJwC,EAAOxC,YAAOsC,GAAV,kEAAGtC,CAAH,mCAMJyC,EAAczC,IAAO0C,GAAV,yEAAG1C,CAAH,4HAOMkC,GAoCVS,GAFEC,UA7BG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAChB,kBAAC,EAAD,CAAQC,cAAe,MACrB,kBAAC,IAAD,CAAKtB,MAAO,SACZ,kBAACY,EAAD,KACE,kBAAC,EAAD,CACEW,MAAOF,EAAKG,KAAKC,gBAAgBF,MACjCrC,SAAU,aACVF,OAAQ,SAEV,kBAACiC,EAAD,KAAc,2BACd,kBAACH,EAAD,yBAPF,IAOgC,kBAAC,EAAD,iBAEhC,kBAACY,EAAA,EAAD,KACE,2CACA,kBAACvC,EAAD,MACA,2DACA,uFACA,kBAACc,EAAD,MACA,4BACE,kBAAC,IAAD,CAAa0B,MAAO,CAAEC,cAAe,YADvC,iBAIA,uBAAG9B,KAAK,oCAAR,mCASY,e,kCC1FlB,EAAQ,OAAR,CAA0B,QAAQ,SAAU+B,GAC1C,OAAO,SAAcC,GACnB,OAAOD,EAAWE,KAAM,IAAK,OAAQD","file":"component---src-pages-index-js-9a9043b0228542708de2.js","sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport Base from './_Base';\nimport Header from '../organisems/Header';\n\nconst OverlaidHeader = styled(Header)`\n  // On devices where we can expand/collapse our mobile menu use an overlay.\n  .js & {\n    position: absolute;\n    left: 0;\n    right: 0;\n    z-index: 1000;\n  }\n\n  // On devices where that wouldn't be possible, just default to the normal\n  // menu.\n  .no-js {\n    background-color: #211a74;\n  }\n`;\n\n/**\n * Renders the base layout with a transparent header overlaying the content.\n */\nconst Splash = ({ children, ...rest }) => {\n  return (\n    <Base Header={OverlaidHeader} {...rest}>\n      {children}\n    </Base>\n  );\n};\n\nexport default Splash;\n","import Image from 'gatsby-image';\nimport styled from 'styled-components';\n\n/**\n * Provides a background image for elements using gatsby-image.\n *\n * Accepts the same arguments as gatsby-image and should be put as first element\n * in the container for which it should be a background-image.\n */\nconst BgImage = styled(Image)`\n  position: absolute !important;\n  top: 0;\n  left: 0;\n  width: 100%;\n  z-index: -1;\n  height: ${props => props.height || 'auto'};\n\n  // Adjust image positioning (if image covers area with defined height) and add font-family for polyfill\n  & img {\n    object-fit: ${props => props.fit || 'cover'} !important;\n    object-position: ${props => props.position || '50% 50%'} !important;\n  }\n`;\n\nexport default BgImage;\n","import React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\n\n/**\n * Pulls the most recent blog post from the blog.rustfest.eu and shows it.\n *\n * @return {ReactElement}\n *   The rendered article.\n */\nexport default function RecentBlogPost() {\n  // Get some metadata for the site.\n  const { feedRustFestBlog: post } = useStaticQuery(graphql`\n    query latestRustBlogPost {\n      feedRustFestBlog {\n        title\n        pubDate\n        link\n        contentSnippet\n      }\n    }\n  `);\n\n  // Remove the time and timestamp from the pubDate.\n  const date = post.pubDate\n    .split(' ')\n    .slice(0, 4)\n    .join(' ');\n\n  // Print only the first 80 words of the story.\n  let snippet = post.contentSnippet\n    .split(' ')\n    .slice(0, 70)\n    .join(' ');\n  // If there's more to the story, add a link.\n  if (snippet.length < post.contentSnippet.length) {\n    snippet += '...';\n    snippet = (\n      <>\n        {snippet}{' '}\n        <a href={post.link} title={'Read the full post'}>\n          Read more\n        </a>\n      </>\n    );\n  }\n\n  return (\n    <article>\n      <time>{date}</time>\n      <h3>\n        <a href={post.link} title={'Read the full post'}>\n          {post.title}\n        </a>\n      </h3>\n      <p>{snippet}</p>\n    </article>\n  );\n}\n","import React from 'react';\n\nexport default function MailChimpSubscriptionForm() {\n  return (\n    <form\n      className=\"formInput\"\n      action=\"https://asquera.us13.list-manage.com/subscribe/post\"\n      method=\"POST\"\n    >\n      <input type=\"hidden\" value=\"7945052bc1ecc432bff53c079\" name=\"u\" />\n      <input type=\"hidden\" value=\"5929ff51d6\" name=\"id\" />\n      <div className=\"group\">\n        <input\n          type=\"email\"\n          name=\"EMAIL\"\n          required=\"\"\n          placeholder=\"your.email@example.org\"\n        />\n        <button type=\"submit\">Sign up</button>\n      </div>\n    </form>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { graphql } from 'gatsby';\n\nimport Splash from '../components/layouts/Splash';\nimport SEO from '../components/Seo';\nimport Container from '../components/atoms/Container';\nimport BgImage from '../components/atoms/BgImage';\nimport { breakpoints } from '../components/tokens';\nimport RecentBlogPost from '../components/molecules/RecentBlogPost';\nimport MailChimpSubscriptionForm from '../components/molecules/MailChimpSubscriptionForm';\nimport { Twitter as TwitterIcon } from '../components/atoms/icons';\n\nconst { TITLE_BREAKPOINT } = breakpoints;\n\nconst Hero = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  overflow: hidden;\n\n  background: rgba(0, 0, 0, 0.5);\n  color: white;\n\n  padding-top: 6rem;\n\n  .js & {\n    height: 100vh;\n  }\n`;\n\n// Styling of h2.\nconst City = styled.span`\n  display: block;\n  font-size: 2em;\n  font-weight: bold;\n  margin-block-start: 0.83em;\n  margin-block-end: 0.5rem;\n`;\n\nconst Date = styled(City)`\n  .no-js & {\n    margin-bottom: 5rem;\n  }\n`;\n\nconst SplashTitle = styled.h1`\n  margin: 0 15px 0 1rem;\n  text-align: center;\n  font-size: 2rem;\n  font-weight: bold;\n  color: #fff;\n\n  @media (min-width: ${TITLE_BREAKPOINT}) {\n    display: none;\n  }\n`;\n\nconst IndexPage = ({ data }) => (\n  <Splash headerTitleAs={'h1'}>\n    <SEO title={'Home'} />\n    <Hero>\n      <BgImage\n        fluid={data.file.childImageSharp.fluid}\n        position={'center 10%'}\n        height={'100%'}\n      />\n      <SplashTitle>{'RustFest.eu Netherlands'}</SplashTitle>\n      <City>Utrecht & Online</City> <Date>Q4 2020</Date>\n    </Hero>\n    <Container>\n      <h2>Latest news</h2>\n      <RecentBlogPost />\n      <h2>Updates right to your inbox</h2>\n      <p>Join our mailing list to always receive the latest info:</p>\n      <MailChimpSubscriptionForm />\n      <h2>\n        <TwitterIcon style={{ verticalAlign: 'middle' }} />\n        Hear us chirp\n      </h2>\n      <a href=\"https://www.twitter.com/rustfest\">\n        Follow @rustfest on Twitter.\n      </a>\n    </Container>\n  </Splash>\n);\n\nexport default IndexPage;\n\nexport const query = graphql`\n  query {\n    file(relativePath: { eq: \"Noorderlicht_Juri_Hiensch.jpg\" }) {\n      childImageSharp {\n        fluid(maxWidth: 2000, maxHeight: 1333) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`;\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}